#! /usr/bin/python3

import csv, fnmatch, os, re, subprocess, sys

from shlex import quote

home      = "/media/ktv/karaoke/"
kbook_id  = (int(sys.argv[1])) + 1
song_file = open('/home/fontella/.local/bin/songs-loc.csv')
db        = csv.reader(song_file)

# Returns filename that matches sound choice code
def return_file(pattern, path):
    song  = ''
    code  = str(pattern)
    param = '*' + code + '*'

    for file in os.listdir(path):
        if fnmatch.fnmatch(file, param):
            song = os.path.splitext(file)[0]
    return song

# If uppercase error retrieves correct mp3 with sound choice code
def find_file_code(library, path, filename):
    cwd            = os.path.join(home + library + '/' + path + '/')
    wrong_filename = str(filename)

    if wrong_filename.isupper():
        regex_code = re.compile(r'(\d\d\d\d)-(\d\d)')
        song_code  = regex_code.search(wrong_filename)
        pattern    = song_code.group()

        return return_file(pattern, cwd)
    else:
        return filename

# Grabs song data from csv file
for row in db:
    if db.line_num == kbook_id:
        csv_row = row

# Song Class
class Song(object):

    # Initialiser, parses csv data to object prototype
    def __init__(self, metadata):
        self.code     = metadata[1]
        self.id       = metadata[2]
        self.library  = metadata[6]
        self.path     = metadata[7]
        self.filename = find_file_code(
                             metadata[6], 
                             metadata[7], 
                             metadata[8]
                        )
        self.artist   = metadata[9]
        self.song     = metadata[10]

    # If add_to_queue fails, this method can open tracks directory
    def open_directory(self):
        library = self.library
        path    = self.path
        folder  = os.path.join(home + library + '/' + path + '/')

        print('opening ' + folder)
        subprocess.run(["nautilus", folder])

    # adds the selected track to the VLC playlist
    def add_to_queue(self):
        filename = quote(self.filename)
        call_vlc = "vlc -f --playlist-enqueue file://"
        track    = os.path.join(home + filename + ".mp3")
        lib    = os.path.join(home + self.library)
        path    = os.path.join(self.path + filename + ".mp3")
        whack    = os.path.join(lib + path)

        print(self.song + ' by ' + self.artist + ' added to playlist.')
        print(whack, self.library)
        # subprocess.call(call_vlc + whack, shell=True)

# Instantiates a new Song object
current_song = Song(csv_row)

# Calls either the add_to_queue method or the open_directory method
if len(sys.argv) > 2:
    open_dir = (str(sys.argv[2]))

    if open_dir == 'h':
        current_song.open_directory()
else:
    current_song.add_to_queue()
